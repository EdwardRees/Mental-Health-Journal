generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model Auth {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  password String // hashed
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @unique
}

model BlogPost {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int       @unique
  likes     Like[]
  comments  Comment[]
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  post      BlogPost @relation(fields: [postId], references: [id])
  userId    Int      @unique
  postId    Int      @unique
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  post      BlogPost @relation(fields: [postId], references: [id])
  authorId  Int      @unique
  postId    Int      @unique
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  token     String
  expiresAt DateTime
  used      Boolean
}

model User {
  id            Int             @id @default(autoincrement())
  firstName     String
  lastName      String
  auth          Auth?
  role          Role            @default(value: USER)
  blogPosts     BlogPost[]
  comments      Comment[]
  likes         Like[]
  passwordReset PasswordReset[]
}
